{
  "abi": [
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "14": "C:/Users/savvy/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/proxy/beacon/IBeacon.sol"
  },
  "ast": {
    "absolutePath": "C:/Users/savvy/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/proxy/beacon/IBeacon.sol",
    "exportedSymbols": {
      "IBeacon": [
        13473
      ]
    },
    "id": 13474,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13465,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "93:23:14"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IBeacon",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 13466,
          "nodeType": "StructuredDocumentation",
          "src": "118:79:14",
          "text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
        },
        "fullyImplemented": false,
        "id": 13473,
        "linearizedBaseContracts": [
          13473
        ],
        "name": "IBeacon",
        "nameLocation": "208:7:14",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 13467,
              "nodeType": "StructuredDocumentation",
              "src": "222:162:14",
              "text": " @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."
            },
            "functionSelector": "5c60da1b",
            "id": 13472,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "implementation",
            "nameLocation": "398:14:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13468,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "412:2:14"
            },
            "returnParameters": {
              "id": 13471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13470,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13472,
                  "src": "438:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13469,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "438:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "437:9:14"
            },
            "scope": 13473,
            "src": "389:58:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 13474,
        "src": "198:251:14",
        "usedErrors": []
      }
    ],
    "src": "93:357:14"
  },
  "bytecode": "",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "IBeacon",
  "coverageMap": {
    "branches": {},
    "statements": {}
  },
  "dependencies": [],
  "deployedBytecode": "",
  "deployedSourceMap": "",
  "language": "Solidity",
  "natspec": {
    "details": "This is the interface that {BeaconProxy} expects of its beacon.",
    "kind": "dev",
    "methods": {
      "implementation()": {
        "details": "Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."
      }
    },
    "version": 1
  },
  "offset": [
    198,
    449
  ],
  "opcodes": "",
  "pcMap": {},
  "sha1": "f3f909be8547c9692255a49b95dc0a9e325e5444",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n",
  "sourceMap": "",
  "sourcePath": "C:/Users/savvy/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/proxy/beacon/IBeacon.sol",
  "type": "interface"
}