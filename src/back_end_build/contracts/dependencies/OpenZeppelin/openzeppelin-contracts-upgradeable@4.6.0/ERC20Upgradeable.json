{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "C:/Users/savvy/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.6.0/contracts/proxy/utils/Initializable.sol",
    "2": "C:/Users/savvy/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.6.0/contracts/token/ERC20/ERC20Upgradeable.sol",
    "3": "C:/Users/savvy/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.6.0/contracts/token/ERC20/IERC20Upgradeable.sol",
    "4": "C:/Users/savvy/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.6.0/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
    "6": "C:/Users/savvy/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.6.0/contracts/utils/ContextUpgradeable.sol"
  },
  "ast": {
    "absolutePath": "C:/Users/savvy/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.6.0/contracts/token/ERC20/ERC20Upgradeable.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        13453
      ],
      "ContextUpgradeable": [
        12725
      ],
      "ERC20Upgradeable": [
        12102
      ],
      "IERC20MetadataUpgradeable": [
        12828
      ],
      "IERC20Upgradeable": [
        12803
      ],
      "Initializable": [
        12683
      ]
    },
    "id": 12103,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11493,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "105:23:2"
      },
      {
        "absolutePath": "C:/Users/savvy/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.6.0/contracts/token/ERC20/IERC20Upgradeable.sol",
        "file": "./IERC20Upgradeable.sol",
        "id": 11494,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12103,
        "sourceUnit": 12804,
        "src": "130:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/savvy/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.6.0/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
        "file": "./extensions/IERC20MetadataUpgradeable.sol",
        "id": 11495,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12103,
        "sourceUnit": 12829,
        "src": "164:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/savvy/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.6.0/contracts/utils/ContextUpgradeable.sol",
        "file": "../../utils/ContextUpgradeable.sol",
        "id": 11496,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12103,
        "sourceUnit": 12726,
        "src": "217:44:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/savvy/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.6.0/contracts/proxy/utils/Initializable.sol",
        "file": "../../proxy/utils/Initializable.sol",
        "id": 11497,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12103,
        "sourceUnit": 12684,
        "src": "262:45:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11499,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12683,
              "src": "1511:13:2"
            },
            "id": 11500,
            "nodeType": "InheritanceSpecifier",
            "src": "1511:13:2"
          },
          {
            "baseName": {
              "id": 11501,
              "name": "ContextUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12725,
              "src": "1526:18:2"
            },
            "id": 11502,
            "nodeType": "InheritanceSpecifier",
            "src": "1526:18:2"
          },
          {
            "baseName": {
              "id": 11503,
              "name": "IERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12803,
              "src": "1546:17:2"
            },
            "id": 11504,
            "nodeType": "InheritanceSpecifier",
            "src": "1546:17:2"
          },
          {
            "baseName": {
              "id": 11505,
              "name": "IERC20MetadataUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12828,
              "src": "1565:25:2"
            },
            "id": 11506,
            "nodeType": "InheritanceSpecifier",
            "src": "1565:25:2"
          }
        ],
        "canonicalName": "ERC20Upgradeable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 11498,
          "nodeType": "StructuredDocumentation",
          "src": "309:1172:2",
          "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
        },
        "fullyImplemented": true,
        "id": 12102,
        "linearizedBaseContracts": [
          12102,
          12828,
          12803,
          12725,
          12683
        ],
        "name": "ERC20Upgradeable",
        "nameLocation": "1491:16:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 11510,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "1633:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 12102,
            "src": "1597:45:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 11509,
              "keyType": {
                "id": 11507,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1605:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1597:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 11508,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1616:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 11516,
            "mutability": "mutable",
            "name": "_allowances",
            "nameLocation": "1705:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 12102,
            "src": "1649:67:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 11515,
              "keyType": {
                "id": 11511,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1657:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1649:47:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 11514,
                "keyType": {
                  "id": 11512,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1676:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1668:27:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 11513,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1687:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 11518,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "1739:12:2",
            "nodeType": "VariableDeclaration",
            "scope": 12102,
            "src": "1723:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11517,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1723:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 11520,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "1773:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 12102,
            "src": "1758:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 11519,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1758:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 11522,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "1799:7:2",
            "nodeType": "VariableDeclaration",
            "scope": 12102,
            "src": "1784:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 11521,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1784:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 11537,
              "nodeType": "Block",
              "src": "2208:55:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11533,
                        "name": "name_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11525,
                        "src": "2241:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 11534,
                        "name": "symbol_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11527,
                        "src": "2248:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 11532,
                      "name": "__ERC20_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11556,
                      "src": "2218:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 11535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2218:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11536,
                  "nodeType": "ExpressionStatement",
                  "src": "2218:38:2"
                }
              ]
            },
            "documentation": {
              "id": 11523,
              "nodeType": "StructuredDocumentation",
              "src": "1813:298:2",
              "text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
            },
            "id": 11538,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11530,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11529,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12626,
                  "src": "2191:16:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2191:16:2"
              }
            ],
            "name": "__ERC20_init",
            "nameLocation": "2125:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11525,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "2152:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 11538,
                  "src": "2138:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11524,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2138:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11527,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "2173:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 11538,
                  "src": "2159:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11526,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2159:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2137:44:2"
            },
            "returnParameters": {
              "id": 11531,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2208:0:2"
            },
            "scope": 12102,
            "src": "2116:147:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 11555,
              "nodeType": "Block",
              "src": "2371:57:2",
              "statements": [
                {
                  "expression": {
                    "id": 11549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11547,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11520,
                      "src": "2381:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11548,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11540,
                      "src": "2389:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2381:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 11550,
                  "nodeType": "ExpressionStatement",
                  "src": "2381:13:2"
                },
                {
                  "expression": {
                    "id": 11553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11551,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11522,
                      "src": "2404:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11552,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11542,
                      "src": "2414:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2404:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 11554,
                  "nodeType": "ExpressionStatement",
                  "src": "2404:17:2"
                }
              ]
            },
            "id": 11556,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11545,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11544,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12626,
                  "src": "2354:16:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2354:16:2"
              }
            ],
            "name": "__ERC20_init_unchained",
            "nameLocation": "2278:22:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11540,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "2315:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 11556,
                  "src": "2301:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11539,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2301:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11542,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "2336:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 11556,
                  "src": "2322:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11541,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2322:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2300:44:2"
            },
            "returnParameters": {
              "id": 11546,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2371:0:2"
            },
            "scope": 12102,
            "src": "2269:159:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              12815
            ],
            "body": {
              "id": 11565,
              "nodeType": "Block",
              "src": "2562:29:2",
              "statements": [
                {
                  "expression": {
                    "id": 11563,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11520,
                    "src": "2579:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 11562,
                  "id": 11564,
                  "nodeType": "Return",
                  "src": "2572:12:2"
                }
              ]
            },
            "documentation": {
              "id": 11557,
              "nodeType": "StructuredDocumentation",
              "src": "2434:54:2",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
            "id": 11566,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2502:4:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11559,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2529:8:2"
            },
            "parameters": {
              "id": 11558,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2506:2:2"
            },
            "returnParameters": {
              "id": 11562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11561,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11566,
                  "src": "2547:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11560,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2547:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2546:15:2"
            },
            "scope": 12102,
            "src": "2493:98:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12821
            ],
            "body": {
              "id": 11575,
              "nodeType": "Block",
              "src": "2775:31:2",
              "statements": [
                {
                  "expression": {
                    "id": 11573,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11522,
                    "src": "2792:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 11572,
                  "id": 11574,
                  "nodeType": "Return",
                  "src": "2785:14:2"
                }
              ]
            },
            "documentation": {
              "id": 11567,
              "nodeType": "StructuredDocumentation",
              "src": "2597:102:2",
              "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
            },
            "functionSelector": "95d89b41",
            "id": 11576,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2713:6:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11569,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2742:8:2"
            },
            "parameters": {
              "id": 11568,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2719:2:2"
            },
            "returnParameters": {
              "id": 11572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11571,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11576,
                  "src": "2760:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11570,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2760:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2759:15:2"
            },
            "scope": 12102,
            "src": "2704:102:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12827
            ],
            "body": {
              "id": 11585,
              "nodeType": "Block",
              "src": "3495:26:2",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3138",
                    "id": 11583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3512:2:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 11582,
                  "id": 11584,
                  "nodeType": "Return",
                  "src": "3505:9:2"
                }
              ]
            },
            "documentation": {
              "id": 11577,
              "nodeType": "StructuredDocumentation",
              "src": "2812:613:2",
              "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
            },
            "functionSelector": "313ce567",
            "id": 11586,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "3439:8:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11579,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3470:8:2"
            },
            "parameters": {
              "id": 11578,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3447:2:2"
            },
            "returnParameters": {
              "id": 11582,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11581,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11586,
                  "src": "3488:5:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 11580,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3488:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3487:7:2"
            },
            "scope": 12102,
            "src": "3430:91:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12752
            ],
            "body": {
              "id": 11595,
              "nodeType": "Block",
              "src": "3651:36:2",
              "statements": [
                {
                  "expression": {
                    "id": 11593,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11518,
                    "src": "3668:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11592,
                  "id": 11594,
                  "nodeType": "Return",
                  "src": "3661:19:2"
                }
              ]
            },
            "documentation": {
              "id": 11587,
              "nodeType": "StructuredDocumentation",
              "src": "3527:49:2",
              "text": " @dev See {IERC20-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 11596,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "3590:11:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11589,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3624:8:2"
            },
            "parameters": {
              "id": 11588,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3601:2:2"
            },
            "returnParameters": {
              "id": 11592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11591,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11596,
                  "src": "3642:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11590,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3642:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3641:9:2"
            },
            "scope": 12102,
            "src": "3581:106:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12760
            ],
            "body": {
              "id": 11609,
              "nodeType": "Block",
              "src": "3828:42:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 11605,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11510,
                      "src": "3845:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 11607,
                    "indexExpression": {
                      "id": 11606,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11599,
                      "src": "3855:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3845:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11604,
                  "id": 11608,
                  "nodeType": "Return",
                  "src": "3838:25:2"
                }
              ]
            },
            "documentation": {
              "id": 11597,
              "nodeType": "StructuredDocumentation",
              "src": "3693:47:2",
              "text": " @dev See {IERC20-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 11610,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "3754:9:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11601,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3801:8:2"
            },
            "parameters": {
              "id": 11600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11599,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3772:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 11610,
                  "src": "3764:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11598,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3764:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3763:17:2"
            },
            "returnParameters": {
              "id": 11604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11603,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11610,
                  "src": "3819:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11602,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3819:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3818:9:2"
            },
            "scope": 12102,
            "src": "3745:125:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12770
            ],
            "body": {
              "id": 11634,
              "nodeType": "Block",
              "src": "4151:104:2",
              "statements": [
                {
                  "assignments": [
                    11622
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11622,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "4169:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 11634,
                      "src": "4161:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 11621,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4161:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11625,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 11623,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12710,
                      "src": "4177:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 11624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4177:12:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4161:28:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11627,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11622,
                        "src": "4209:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11628,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11613,
                        "src": "4216:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11629,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11615,
                        "src": "4220:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11626,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11858,
                      "src": "4199:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 11630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4199:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11631,
                  "nodeType": "ExpressionStatement",
                  "src": "4199:28:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 11632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4244:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 11620,
                  "id": 11633,
                  "nodeType": "Return",
                  "src": "4237:11:2"
                }
              ]
            },
            "documentation": {
              "id": 11611,
              "nodeType": "StructuredDocumentation",
              "src": "3876:185:2",
              "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
            },
            "functionSelector": "a9059cbb",
            "id": 11635,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "4075:8:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11617,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4127:8:2"
            },
            "parameters": {
              "id": 11616,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11613,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4092:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 11635,
                  "src": "4084:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11612,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4084:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11615,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4104:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 11635,
                  "src": "4096:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11614,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4096:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4083:28:2"
            },
            "returnParameters": {
              "id": 11620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11619,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11635,
                  "src": "4145:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11618,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4145:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4144:6:2"
            },
            "scope": 12102,
            "src": "4066:189:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12780
            ],
            "body": {
              "id": 11652,
              "nodeType": "Block",
              "src": "4411:51:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 11646,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11516,
                        "src": "4428:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 11648,
                      "indexExpression": {
                        "id": 11647,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11638,
                        "src": "4440:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4428:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 11650,
                    "indexExpression": {
                      "id": 11649,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11640,
                      "src": "4447:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4428:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11645,
                  "id": 11651,
                  "nodeType": "Return",
                  "src": "4421:34:2"
                }
              ]
            },
            "documentation": {
              "id": 11636,
              "nodeType": "StructuredDocumentation",
              "src": "4261:47:2",
              "text": " @dev See {IERC20-allowance}."
            },
            "functionSelector": "dd62ed3e",
            "id": 11653,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "4322:9:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11642,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4384:8:2"
            },
            "parameters": {
              "id": 11641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11638,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4340:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 11653,
                  "src": "4332:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11637,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4332:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11640,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "4355:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 11653,
                  "src": "4347:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11639,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4347:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4331:32:2"
            },
            "returnParameters": {
              "id": 11645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11644,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11653,
                  "src": "4402:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4402:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4401:9:2"
            },
            "scope": 12102,
            "src": "4313:149:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12790
            ],
            "body": {
              "id": 11677,
              "nodeType": "Block",
              "src": "4859:108:2",
              "statements": [
                {
                  "assignments": [
                    11665
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11665,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "4877:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 11677,
                      "src": "4869:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 11664,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4869:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11668,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 11666,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12710,
                      "src": "4885:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 11667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4885:12:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4869:28:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11670,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11665,
                        "src": "4916:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11671,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11656,
                        "src": "4923:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11672,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11658,
                        "src": "4932:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11669,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12031,
                      "src": "4907:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 11673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4907:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11674,
                  "nodeType": "ExpressionStatement",
                  "src": "4907:32:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 11675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4956:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 11663,
                  "id": 11676,
                  "nodeType": "Return",
                  "src": "4949:11:2"
                }
              ]
            },
            "documentation": {
              "id": 11654,
              "nodeType": "StructuredDocumentation",
              "src": "4468:297:2",
              "text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "095ea7b3",
            "id": 11678,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "4779:7:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11660,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4835:8:2"
            },
            "parameters": {
              "id": 11659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11656,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "4795:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 11678,
                  "src": "4787:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11655,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4787:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11658,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4812:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 11678,
                  "src": "4804:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11657,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4804:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4786:33:2"
            },
            "returnParameters": {
              "id": 11663,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11662,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11678,
                  "src": "4853:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11661,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4853:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4852:6:2"
            },
            "scope": 12102,
            "src": "4770:197:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12802
            ],
            "body": {
              "id": 11710,
              "nodeType": "Block",
              "src": "5662:153:2",
              "statements": [
                {
                  "assignments": [
                    11692
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11692,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "5680:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 11710,
                      "src": "5672:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 11691,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5672:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11695,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 11693,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12710,
                      "src": "5690:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 11694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5690:12:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5672:30:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11697,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11681,
                        "src": "5728:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11698,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11692,
                        "src": "5734:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11699,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11685,
                        "src": "5743:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11696,
                      "name": "_spendAllowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12074,
                      "src": "5712:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 11700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5712:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11701,
                  "nodeType": "ExpressionStatement",
                  "src": "5712:38:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11703,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11681,
                        "src": "5770:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11704,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11683,
                        "src": "5776:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11705,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11685,
                        "src": "5780:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11702,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11858,
                      "src": "5760:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 11706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5760:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11707,
                  "nodeType": "ExpressionStatement",
                  "src": "5760:27:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 11708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5804:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 11690,
                  "id": 11709,
                  "nodeType": "Return",
                  "src": "5797:11:2"
                }
              ]
            },
            "documentation": {
              "id": 11679,
              "nodeType": "StructuredDocumentation",
              "src": "4973:551:2",
              "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
            },
            "functionSelector": "23b872dd",
            "id": 11711,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "5538:12:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11687,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5638:8:2"
            },
            "parameters": {
              "id": 11686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11681,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5568:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 11711,
                  "src": "5560:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11680,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5560:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11683,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5590:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 11711,
                  "src": "5582:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11682,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5582:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11685,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5610:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 11711,
                  "src": "5602:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11684,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5602:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5550:72:2"
            },
            "returnParameters": {
              "id": 11690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11689,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11711,
                  "src": "5656:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11688,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5656:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5655:6:2"
            },
            "scope": 12102,
            "src": "5529:286:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11739,
              "nodeType": "Block",
              "src": "6304:140:2",
              "statements": [
                {
                  "assignments": [
                    11722
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11722,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "6322:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 11739,
                      "src": "6314:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 11721,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6314:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11725,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 11723,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12710,
                      "src": "6330:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 11724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6330:12:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6314:28:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11727,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11722,
                        "src": "6361:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11728,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11714,
                        "src": "6368:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 11730,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11722,
                              "src": "6387:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 11731,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11714,
                              "src": "6394:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 11729,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11653,
                            "src": "6377:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 11732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6377:25:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 11733,
                          "name": "addedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11716,
                          "src": "6405:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6377:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11726,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12031,
                      "src": "6352:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 11735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6352:64:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11736,
                  "nodeType": "ExpressionStatement",
                  "src": "6352:64:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 11737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6433:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 11720,
                  "id": 11738,
                  "nodeType": "Return",
                  "src": "6426:11:2"
                }
              ]
            },
            "documentation": {
              "id": 11712,
              "nodeType": "StructuredDocumentation",
              "src": "5821:384:2",
              "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "39509351",
            "id": 11740,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAllowance",
            "nameLocation": "6219:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11714,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "6245:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 11740,
                  "src": "6237:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11713,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6237:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11716,
                  "mutability": "mutable",
                  "name": "addedValue",
                  "nameLocation": "6262:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 11740,
                  "src": "6254:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11715,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6254:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6236:37:2"
            },
            "returnParameters": {
              "id": 11720,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11719,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11740,
                  "src": "6298:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11718,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6298:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6297:6:2"
            },
            "scope": 12102,
            "src": "6210:234:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11780,
              "nodeType": "Block",
              "src": "7030:328:2",
              "statements": [
                {
                  "assignments": [
                    11751
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11751,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "7048:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 11780,
                      "src": "7040:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 11750,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7040:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11754,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 11752,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12710,
                      "src": "7056:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 11753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7056:12:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7040:28:2"
                },
                {
                  "assignments": [
                    11756
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11756,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "7086:16:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 11780,
                      "src": "7078:24:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11755,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7078:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11761,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 11758,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11751,
                        "src": "7115:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11759,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11743,
                        "src": "7122:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11757,
                      "name": "allowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11653,
                      "src": "7105:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view returns (uint256)"
                      }
                    },
                    "id": 11760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7105:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7078:52:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11763,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11756,
                          "src": "7148:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 11764,
                          "name": "subtractedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11745,
                          "src": "7168:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7148:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                        "id": 11766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7185:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        },
                        "value": "ERC20: decreased allowance below zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        }
                      ],
                      "id": 11762,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7140:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7140:85:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11768,
                  "nodeType": "ExpressionStatement",
                  "src": "7140:85:2"
                },
                {
                  "id": 11777,
                  "nodeType": "UncheckedBlock",
                  "src": "7235:95:2",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 11770,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11751,
                            "src": "7268:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 11771,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11743,
                            "src": "7275:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 11774,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 11772,
                              "name": "currentAllowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11756,
                              "src": "7284:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 11773,
                              "name": "subtractedValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11745,
                              "src": "7303:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7284:34:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 11769,
                          "name": "_approve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12031,
                          "src": "7259:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 11775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7259:60:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 11776,
                      "nodeType": "ExpressionStatement",
                      "src": "7259:60:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 11778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7347:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 11749,
                  "id": 11779,
                  "nodeType": "Return",
                  "src": "7340:11:2"
                }
              ]
            },
            "documentation": {
              "id": 11741,
              "nodeType": "StructuredDocumentation",
              "src": "6450:476:2",
              "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
            },
            "functionSelector": "a457c2d7",
            "id": 11781,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAllowance",
            "nameLocation": "6940:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11743,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "6966:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 11781,
                  "src": "6958:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11742,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6958:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11745,
                  "mutability": "mutable",
                  "name": "subtractedValue",
                  "nameLocation": "6983:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 11781,
                  "src": "6975:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11744,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6975:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6957:42:2"
            },
            "returnParameters": {
              "id": 11749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11748,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11781,
                  "src": "7024:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11747,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7024:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7023:6:2"
            },
            "scope": 12102,
            "src": "6931:427:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11857,
              "nodeType": "Block",
              "src": "7929:543:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11792,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11784,
                          "src": "7947:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 11795,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7963:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11794,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7955:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11793,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7955:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7955:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7947:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 11798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7967:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        },
                        "value": "ERC20: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        }
                      ],
                      "id": 11791,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7939:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7939:68:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11800,
                  "nodeType": "ExpressionStatement",
                  "src": "7939:68:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11802,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11786,
                          "src": "8025:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 11805,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8039:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11804,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8031:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11803,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8031:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8031:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8025:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 11808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8043:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 11801,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8017:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8017:64:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11810,
                  "nodeType": "ExpressionStatement",
                  "src": "8017:64:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11812,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11784,
                        "src": "8113:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11813,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11786,
                        "src": "8119:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11814,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11788,
                        "src": "8123:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11811,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12085,
                      "src": "8092:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 11815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8092:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11816,
                  "nodeType": "ExpressionStatement",
                  "src": "8092:38:2"
                },
                {
                  "assignments": [
                    11818
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11818,
                      "mutability": "mutable",
                      "name": "fromBalance",
                      "nameLocation": "8149:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 11857,
                      "src": "8141:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11817,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8141:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11822,
                  "initialValue": {
                    "baseExpression": {
                      "id": 11819,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11510,
                      "src": "8163:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 11821,
                    "indexExpression": {
                      "id": 11820,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11784,
                      "src": "8173:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8163:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8141:37:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11824,
                          "name": "fromBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11818,
                          "src": "8196:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 11825,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11788,
                          "src": "8211:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8196:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                        "id": 11827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8219:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        },
                        "value": "ERC20: transfer amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        }
                      ],
                      "id": 11823,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8188:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8188:72:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11829,
                  "nodeType": "ExpressionStatement",
                  "src": "8188:72:2"
                },
                {
                  "id": 11838,
                  "nodeType": "UncheckedBlock",
                  "src": "8270:73:2",
                  "statements": [
                    {
                      "expression": {
                        "id": 11836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 11830,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11510,
                            "src": "8294:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 11832,
                          "indexExpression": {
                            "id": 11831,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11784,
                            "src": "8304:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "8294:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 11835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 11833,
                            "name": "fromBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11818,
                            "src": "8312:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 11834,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11788,
                            "src": "8326:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8312:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8294:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 11837,
                      "nodeType": "ExpressionStatement",
                      "src": "8294:38:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 11843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 11839,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11510,
                        "src": "8352:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 11841,
                      "indexExpression": {
                        "id": 11840,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11786,
                        "src": "8362:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8352:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 11842,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11788,
                      "src": "8369:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8352:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11844,
                  "nodeType": "ExpressionStatement",
                  "src": "8352:23:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 11846,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11784,
                        "src": "8400:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11847,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11786,
                        "src": "8406:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11848,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11788,
                        "src": "8410:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11845,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12737,
                      "src": "8391:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 11849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8391:26:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11850,
                  "nodeType": "EmitStatement",
                  "src": "8386:31:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11852,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11784,
                        "src": "8448:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11853,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11786,
                        "src": "8454:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11854,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11788,
                        "src": "8458:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11851,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12096,
                      "src": "8428:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 11855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8428:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11856,
                  "nodeType": "ExpressionStatement",
                  "src": "8428:37:2"
                }
              ]
            },
            "documentation": {
              "id": 11782,
              "nodeType": "StructuredDocumentation",
              "src": "7364:452:2",
              "text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
            },
            "id": 11858,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "7830:9:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11784,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "7857:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 11858,
                  "src": "7849:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11783,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7849:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11786,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7879:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 11858,
                  "src": "7871:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11785,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7871:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11788,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7899:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 11858,
                  "src": "7891:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11787,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7891:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7839:72:2"
            },
            "returnParameters": {
              "id": 11790,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7929:0:2"
            },
            "scope": 12102,
            "src": "7821:651:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 11913,
              "nodeType": "Block",
              "src": "8813:324:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11867,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11861,
                          "src": "8831:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 11870,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8850:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11869,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8842:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11868,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8842:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8842:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8831:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 11873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8854:33:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        },
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        }
                      ],
                      "id": 11866,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8823:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8823:65:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11875,
                  "nodeType": "ExpressionStatement",
                  "src": "8823:65:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 11879,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8928:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 11878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8920:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11877,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8920:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8920:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11881,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11861,
                        "src": "8932:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11882,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11863,
                        "src": "8941:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11876,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12085,
                      "src": "8899:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 11883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8899:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11884,
                  "nodeType": "ExpressionStatement",
                  "src": "8899:49:2"
                },
                {
                  "expression": {
                    "id": 11887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11885,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11518,
                      "src": "8959:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 11886,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11863,
                      "src": "8975:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8959:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11888,
                  "nodeType": "ExpressionStatement",
                  "src": "8959:22:2"
                },
                {
                  "expression": {
                    "id": 11893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 11889,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11510,
                        "src": "8991:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 11891,
                      "indexExpression": {
                        "id": 11890,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11861,
                        "src": "9001:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8991:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 11892,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11863,
                      "src": "9013:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8991:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11894,
                  "nodeType": "ExpressionStatement",
                  "src": "8991:28:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 11898,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9051:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 11897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9043:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11896,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9043:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9043:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11900,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11861,
                        "src": "9055:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11901,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11863,
                        "src": "9064:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11895,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12737,
                      "src": "9034:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 11902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9034:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11903,
                  "nodeType": "EmitStatement",
                  "src": "9029:42:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 11907,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9110:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 11906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9102:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11905,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9102:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9102:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11909,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11861,
                        "src": "9114:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11910,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11863,
                        "src": "9123:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11904,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12096,
                      "src": "9082:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 11911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9082:48:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11912,
                  "nodeType": "ExpressionStatement",
                  "src": "9082:48:2"
                }
              ]
            },
            "documentation": {
              "id": 11859,
              "nodeType": "StructuredDocumentation",
              "src": "8478:265:2",
              "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
            },
            "id": 11914,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "8757:5:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11864,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11861,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8771:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 11914,
                  "src": "8763:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11860,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8763:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11863,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8788:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 11914,
                  "src": "8780:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11862,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8780:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8762:33:2"
            },
            "returnParameters": {
              "id": 11865,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8813:0:2"
            },
            "scope": 12102,
            "src": "8748:389:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 11985,
              "nodeType": "Block",
              "src": "9522:511:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11923,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11917,
                          "src": "9540:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 11926,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9559:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11925,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9551:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11924,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9551:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9551:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9540:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 11929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9563:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        },
                        "value": "ERC20: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        }
                      ],
                      "id": 11922,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9532:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9532:67:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11931,
                  "nodeType": "ExpressionStatement",
                  "src": "9532:67:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11933,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11917,
                        "src": "9631:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 11936,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9648:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 11935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9640:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11934,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9640:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9640:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11938,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11919,
                        "src": "9652:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11932,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12085,
                      "src": "9610:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 11939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9610:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11940,
                  "nodeType": "ExpressionStatement",
                  "src": "9610:49:2"
                },
                {
                  "assignments": [
                    11942
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11942,
                      "mutability": "mutable",
                      "name": "accountBalance",
                      "nameLocation": "9678:14:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 11985,
                      "src": "9670:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11941,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9670:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11946,
                  "initialValue": {
                    "baseExpression": {
                      "id": 11943,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11510,
                      "src": "9695:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 11945,
                    "indexExpression": {
                      "id": 11944,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11917,
                      "src": "9705:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9695:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9670:43:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11948,
                          "name": "accountBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11942,
                          "src": "9731:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 11949,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11919,
                          "src": "9749:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9731:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                        "id": 11951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9757:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        },
                        "value": "ERC20: burn amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        }
                      ],
                      "id": 11947,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9723:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9723:71:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11953,
                  "nodeType": "ExpressionStatement",
                  "src": "9723:71:2"
                },
                {
                  "id": 11962,
                  "nodeType": "UncheckedBlock",
                  "src": "9804:79:2",
                  "statements": [
                    {
                      "expression": {
                        "id": 11960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 11954,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11510,
                            "src": "9828:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 11956,
                          "indexExpression": {
                            "id": 11955,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11917,
                            "src": "9838:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "9828:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 11959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 11957,
                            "name": "accountBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11942,
                            "src": "9849:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 11958,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11919,
                            "src": "9866:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9849:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9828:44:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 11961,
                      "nodeType": "ExpressionStatement",
                      "src": "9828:44:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 11965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11963,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11518,
                      "src": "9892:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 11964,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11919,
                      "src": "9908:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9892:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11966,
                  "nodeType": "ExpressionStatement",
                  "src": "9892:22:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 11968,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11917,
                        "src": "9939:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 11971,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9956:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 11970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9948:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11969,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9948:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9948:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11973,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11919,
                        "src": "9960:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11967,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12737,
                      "src": "9930:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 11974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9930:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11975,
                  "nodeType": "EmitStatement",
                  "src": "9925:42:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11977,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11917,
                        "src": "9998:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 11980,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10015:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 11979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10007:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11978,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10007:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10007:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11982,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11919,
                        "src": "10019:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11976,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12096,
                      "src": "9978:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 11983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9978:48:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11984,
                  "nodeType": "ExpressionStatement",
                  "src": "9978:48:2"
                }
              ]
            },
            "documentation": {
              "id": 11915,
              "nodeType": "StructuredDocumentation",
              "src": "9143:309:2",
              "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
            },
            "id": 11986,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "9466:5:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11917,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "9480:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 11986,
                  "src": "9472:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11916,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9472:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11919,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9497:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 11986,
                  "src": "9489:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11918,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9489:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9471:33:2"
            },
            "returnParameters": {
              "id": 11921,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9522:0:2"
            },
            "scope": 12102,
            "src": "9457:576:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 12030,
              "nodeType": "Block",
              "src": "10569:257:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 12002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11997,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11989,
                          "src": "10587:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 12000,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10604:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11999,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10596:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11998,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10596:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 12001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10596:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10587:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 12003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10608:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        },
                        "value": "ERC20: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        }
                      ],
                      "id": 11996,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10579:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10579:68:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12005,
                  "nodeType": "ExpressionStatement",
                  "src": "10579:68:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 12012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 12007,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11991,
                          "src": "10665:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 12010,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10684:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 12009,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10676:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 12008,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10676:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 12011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10676:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10665:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 12013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10688:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        },
                        "value": "ERC20: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        }
                      ],
                      "id": 12006,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10657:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10657:68:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12015,
                  "nodeType": "ExpressionStatement",
                  "src": "10657:68:2"
                },
                {
                  "expression": {
                    "id": 12022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 12016,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11516,
                          "src": "10736:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 12019,
                        "indexExpression": {
                          "id": 12017,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11989,
                          "src": "10748:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10736:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 12020,
                      "indexExpression": {
                        "id": 12018,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11991,
                        "src": "10755:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10736:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12021,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11993,
                      "src": "10766:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10736:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12023,
                  "nodeType": "ExpressionStatement",
                  "src": "10736:36:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 12025,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11989,
                        "src": "10796:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12026,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11991,
                        "src": "10803:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12027,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11993,
                        "src": "10812:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12024,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12746,
                      "src": "10787:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 12028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10787:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12029,
                  "nodeType": "EmitStatement",
                  "src": "10782:37:2"
                }
              ]
            },
            "documentation": {
              "id": 11987,
              "nodeType": "StructuredDocumentation",
              "src": "10039:412:2",
              "text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
            },
            "id": 12031,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "10465:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11994,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11989,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "10491:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 12031,
                  "src": "10483:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11988,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10483:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11991,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "10514:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 12031,
                  "src": "10506:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11990,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10506:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11993,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10539:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 12031,
                  "src": "10531:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11992,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10531:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10473:78:2"
            },
            "returnParameters": {
              "id": 11995,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10569:0:2"
            },
            "scope": 12102,
            "src": "10456:370:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 12073,
              "nodeType": "Block",
              "src": "11227:321:2",
              "statements": [
                {
                  "assignments": [
                    12042
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12042,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "11245:16:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 12073,
                      "src": "11237:24:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12041,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11237:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12047,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 12044,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12034,
                        "src": "11274:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12045,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12036,
                        "src": "11281:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12043,
                      "name": "allowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11653,
                      "src": "11264:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view returns (uint256)"
                      }
                    },
                    "id": 12046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11264:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11237:52:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 12048,
                      "name": "currentAllowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12042,
                      "src": "11303:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 12051,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11328:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 12050,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11328:7:2",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            }
                          ],
                          "id": 12049,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -27,
                          "src": "11323:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 12052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11323:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_uint256",
                          "typeString": "type(uint256)"
                        }
                      },
                      "id": 12053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "src": "11323:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11303:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12072,
                  "nodeType": "IfStatement",
                  "src": "11299:243:2",
                  "trueBody": {
                    "id": 12071,
                    "nodeType": "Block",
                    "src": "11342:200:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 12058,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 12056,
                                "name": "currentAllowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12042,
                                "src": "11364:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 12057,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12038,
                                "src": "11384:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11364:26:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                              "id": 12059,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11392:31:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                                "typeString": "literal_string \"ERC20: insufficient allowance\""
                              },
                              "value": "ERC20: insufficient allowance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                                "typeString": "literal_string \"ERC20: insufficient allowance\""
                              }
                            ],
                            "id": 12055,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11356:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 12060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11356:68:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12061,
                        "nodeType": "ExpressionStatement",
                        "src": "11356:68:2"
                      },
                      {
                        "id": 12070,
                        "nodeType": "UncheckedBlock",
                        "src": "11438:94:2",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 12063,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12034,
                                  "src": "11475:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 12064,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12036,
                                  "src": "11482:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 12067,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 12065,
                                    "name": "currentAllowance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12042,
                                    "src": "11491:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 12066,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12038,
                                    "src": "11510:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "11491:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 12062,
                                "name": "_approve",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12031,
                                "src": "11466:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,address,uint256)"
                                }
                              },
                              "id": 12068,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11466:51:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 12069,
                            "nodeType": "ExpressionStatement",
                            "src": "11466:51:2"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 12032,
              "nodeType": "StructuredDocumentation",
              "src": "10832:270:2",
              "text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
            },
            "id": 12074,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_spendAllowance",
            "nameLocation": "11116:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12034,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "11149:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 12074,
                  "src": "11141:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12033,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11141:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12036,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "11172:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 12074,
                  "src": "11164:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12035,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11164:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12038,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11197:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 12074,
                  "src": "11189:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12037,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11189:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11131:78:2"
            },
            "returnParameters": {
              "id": 12040,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11227:0:2"
            },
            "scope": 12102,
            "src": "11107:441:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 12084,
              "nodeType": "Block",
              "src": "12251:2:2",
              "statements": []
            },
            "documentation": {
              "id": 12075,
              "nodeType": "StructuredDocumentation",
              "src": "11554:573:2",
              "text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 12085,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "12141:20:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12082,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12077,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12179:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 12085,
                  "src": "12171:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12076,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12171:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12079,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12201:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 12085,
                  "src": "12193:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12078,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12193:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12081,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12221:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 12085,
                  "src": "12213:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12080,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12213:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12161:72:2"
            },
            "returnParameters": {
              "id": 12083,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12251:0:2"
            },
            "scope": 12102,
            "src": "12132:121:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 12095,
              "nodeType": "Block",
              "src": "12959:2:2",
              "statements": []
            },
            "documentation": {
              "id": 12086,
              "nodeType": "StructuredDocumentation",
              "src": "12259:577:2",
              "text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 12096,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "12850:19:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12088,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12887:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 12096,
                  "src": "12879:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12087,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12879:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12090,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12909:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 12096,
                  "src": "12901:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12089,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12901:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12092,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12929:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 12096,
                  "src": "12921:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12091,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12921:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12869:72:2"
            },
            "returnParameters": {
              "id": 12094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12959:0:2"
            },
            "scope": 12102,
            "src": "12841:120:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 12097,
              "nodeType": "StructuredDocumentation",
              "src": "12967:254:2",
              "text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
            },
            "id": 12101,
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "13246:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 12102,
            "src": "13226:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$45_storage",
              "typeString": "uint256[45]"
            },
            "typeName": {
              "baseType": {
                "id": 12098,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "13226:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 12100,
              "length": {
                "hexValue": "3435",
                "id": 12099,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "13234:2:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_45_by_1",
                  "typeString": "int_const 45"
                },
                "value": "45"
              },
              "nodeType": "ArrayTypeName",
              "src": "13226:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$45_storage_ptr",
                "typeString": "uint256[45]"
              }
            },
            "visibility": "private"
          }
        ],
        "scope": 12103,
        "src": "1482:11772:2",
        "usedErrors": []
      }
    ],
    "src": "105:13150:2"
  },
  "bytecode": "608060405234801561001057600080fd5b50610886806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c4565b60405180910390f35b6100df6100da366004610735565b610232565b60405190151581526020016100c3565b6035545b6040519081526020016100c3565b6100df61010f36600461075f565b61024a565b604051601281526020016100c3565b6100df610131366004610735565b61026e565b6100f361014436600461079b565b6001600160a01b031660009081526033602052604090205490565b6100b6610290565b6100df610175366004610735565b61029f565b6100df610188366004610735565b61031f565b6100f361019b3660046107bd565b61032d565b6060603680546101af906107f0565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107f0565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b919061082a565b610358565b6060603780546101af906107f0565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260336020526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526033602052604080822085850390559185168152908120805484929061066b90849061082a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106f1578581018301518582016040015282016106d5565b81811115610703576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461073057600080fd5b919050565b6000806040838503121561074857600080fd5b61075183610719565b946020939093013593505050565b60008060006060848603121561077457600080fd5b61077d84610719565b925061078b60208501610719565b9150604084013590509250925092565b6000602082840312156107ad57600080fd5b6107b682610719565b9392505050565b600080604083850312156107d057600080fd5b6107d983610719565b91506107e760208401610719565b90509250929050565b600181811c9082168061080457607f821691505b60208210810361082457634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561084b57634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212203af63fce70069bdfde6069938807bcda000de64baae4ed7a758e6ea7d6b29fa064736f6c634300080d0033",
  "bytecodeSha1": "9ceda355ae60133a94015812586c2ade04b56e77",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "ERC20Upgradeable",
  "coverageMap": {
    "branches": {
      "1": {},
      "2": {
        "ERC20Upgradeable._approve": {
          "30": [
            10587,
            10606,
            true
          ],
          "31": [
            10665,
            10686,
            true
          ]
        },
        "ERC20Upgradeable._spendAllowance": {
          "32": [
            11303,
            11340,
            false
          ],
          "33": [
            11364,
            11390,
            true
          ]
        },
        "ERC20Upgradeable._transfer": {
          "34": [
            7947,
            7965,
            true
          ],
          "35": [
            8025,
            8041,
            true
          ],
          "36": [
            8196,
            8217,
            true
          ]
        },
        "ERC20Upgradeable.decreaseAllowance": {
          "29": [
            7148,
            7183,
            true
          ]
        }
      },
      "3": {},
      "4": {},
      "6": {}
    },
    "statements": {
      "1": {},
      "2": {
        "ERC20Upgradeable._approve": {
          "16": [
            10579,
            10647
          ],
          "17": [
            10657,
            10725
          ],
          "18": [
            10736,
            10772
          ],
          "19": [
            10782,
            10819
          ]
        },
        "ERC20Upgradeable._spendAllowance": {
          "20": [
            11356,
            11424
          ],
          "21": [
            11466,
            11517
          ]
        },
        "ERC20Upgradeable._transfer": {
          "22": [
            7939,
            8007
          ],
          "23": [
            8017,
            8081
          ],
          "24": [
            8188,
            8260
          ],
          "25": [
            8294,
            8332
          ],
          "26": [
            8352,
            8375
          ],
          "27": [
            8386,
            8417
          ],
          "28": [
            8428,
            8465
          ]
        },
        "ERC20Upgradeable.allowance": {
          "15": [
            4421,
            4455
          ]
        },
        "ERC20Upgradeable.approve": {
          "5": [
            4907,
            4939
          ],
          "6": [
            4949,
            4960
          ]
        },
        "ERC20Upgradeable.balanceOf": {
          "2": [
            3838,
            3863
          ]
        },
        "ERC20Upgradeable.decimals": {
          "1": [
            3505,
            3514
          ]
        },
        "ERC20Upgradeable.decreaseAllowance": {
          "12": [
            7140,
            7225
          ],
          "13": [
            7259,
            7319
          ]
        },
        "ERC20Upgradeable.increaseAllowance": {
          "10": [
            6352,
            6416
          ]
        },
        "ERC20Upgradeable.name": {
          "3": [
            2572,
            2584
          ]
        },
        "ERC20Upgradeable.symbol": {
          "11": [
            2785,
            2799
          ]
        },
        "ERC20Upgradeable.totalSupply": {
          "0": [
            3661,
            3680
          ]
        },
        "ERC20Upgradeable.transfer": {
          "14": [
            4199,
            4227
          ]
        },
        "ERC20Upgradeable.transferFrom": {
          "7": [
            5712,
            5750
          ],
          "8": [
            5760,
            5787
          ],
          "9": [
            5797,
            5808
          ]
        }
      },
      "3": {},
      "4": {},
      "6": {
        "ContextUpgradeable._msgSender": {
          "4": [
            922,
            939
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.6.0/ContextUpgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.6.0/IERC20MetadataUpgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.6.0/IERC20Upgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.6.0/Initializable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c4565b60405180910390f35b6100df6100da366004610735565b610232565b60405190151581526020016100c3565b6035545b6040519081526020016100c3565b6100df61010f36600461075f565b61024a565b604051601281526020016100c3565b6100df610131366004610735565b61026e565b6100f361014436600461079b565b6001600160a01b031660009081526033602052604090205490565b6100b6610290565b6100df610175366004610735565b61029f565b6100df610188366004610735565b61031f565b6100f361019b3660046107bd565b61032d565b6060603680546101af906107f0565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107f0565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b919061082a565b610358565b6060603780546101af906107f0565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260336020526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526033602052604080822085850390559185168152908120805484929061066b90849061082a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106f1578581018301518582016040015282016106d5565b81811115610703576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461073057600080fd5b919050565b6000806040838503121561074857600080fd5b61075183610719565b946020939093013593505050565b60008060006060848603121561077457600080fd5b61077d84610719565b925061078b60208501610719565b9150604084013590509250925092565b6000602082840312156107ad57600080fd5b6107b682610719565b9392505050565b600080604083850312156107d057600080fd5b6107d983610719565b91506107e760208401610719565b90509250929050565b600181811c9082168061080457607f821691505b60208210810361082457634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561084b57634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212203af63fce70069bdfde6069938807bcda000de64baae4ed7a758e6ea7d6b29fa064736f6c634300080d0033",
  "deployedSourceMap": "1482:11772:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4770:197;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:40;;1211:22;1193:41;;1181:2;1166:18;4770:197:2;1053:187:40;3581:106:2;3668:12;;3581:106;;;1391:25:40;;;1379:2;1364:18;3581:106:2;1245:177:40;5529:286:2;;;;;;:::i;:::-;;:::i;3430:91::-;;;3512:2;1902:36:40;;1890:2;1875:18;3430:91:2;1760:184:40;6210:234:2;;;;;;:::i;:::-;;:::i;3745:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3845:18:2;3819:7;3845:18;;;:9;:18;;;;;;;3745:125;2704:102;;;:::i;6931:427::-;;;;;;:::i;:::-;;:::i;4066:189::-;;;;;;:::i;:::-;;:::i;4313:149::-;;;;;;:::i;:::-;;:::i;2493:98::-;2547:13;2579:5;2572:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;:::o;4770:197::-;4853:4;929:10:6;4907:32:2;929:10:6;4923:7:2;4932:6;4907:8;:32::i;:::-;-1:-1:-1;4956:4:2;;4770:197;-1:-1:-1;;;4770:197:2:o;5529:286::-;5656:4;929:10:6;5712:38:2;5728:4;929:10:6;5743:6:2;5712:15;:38::i;:::-;5760:27;5770:4;5776:2;5780:6;5760:9;:27::i;:::-;-1:-1:-1;5804:4:2;;5529:286;-1:-1:-1;;;;5529:286:2:o;6210:234::-;6298:4;929:10:6;6352:64:2;929:10:6;6368:7:2;6405:10;6377:25;929:10:6;6368:7:2;6377:9;:25::i;:::-;:38;;;;:::i;:::-;6352:8;:64::i;2704:102::-;2760:13;2792:7;2785:14;;;;;:::i;6931:427::-;7024:4;929:10:6;7024:4:2;7105:25;929:10:6;7122:7:2;7105:9;:25::i;:::-;7078:52;;7168:15;7148:16;:35;;7140:85;;;;-1:-1:-1;;;7140:85:2;;3222:2:40;7140:85:2;;;3204:21:40;3261:2;3241:18;;;3234:30;3300:34;3280:18;;;3273:62;-1:-1:-1;;;3351:18:40;;;3344:35;3396:19;;7140:85:2;;;;;;;;;7259:60;7268:5;7275:7;7303:15;7284:16;:34;7259:8;:60::i;4066:189::-;4145:4;929:10:6;4199:28:2;929:10:6;4216:2:2;4220:6;4199:9;:28::i;4313:149::-;-1:-1:-1;;;;;4428:18:2;;;4402:7;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4313:149::o;10456:370::-;-1:-1:-1;;;;;10587:19:2;;10579:68;;;;-1:-1:-1;;;10579:68:2;;3628:2:40;10579:68:2;;;3610:21:40;3667:2;3647:18;;;3640:30;3706:34;3686:18;;;3679:62;-1:-1:-1;;;3757:18:40;;;3750:34;3801:19;;10579:68:2;3426:400:40;10579:68:2;-1:-1:-1;;;;;10665:21:2;;10657:68;;;;-1:-1:-1;;;10657:68:2;;4033:2:40;10657:68:2;;;4015:21:40;4072:2;4052:18;;;4045:30;4111:34;4091:18;;;4084:62;-1:-1:-1;;;4162:18:40;;;4155:32;4204:19;;10657:68:2;3831:398:40;10657:68:2;-1:-1:-1;;;;;10736:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10787:32;;1391:25:40;;;10787:32:2;;1364:18:40;10787:32:2;;;;;;;10456:370;;;:::o;11107:441::-;11237:24;11264:25;11274:5;11281:7;11264:9;:25::i;:::-;11237:52;;-1:-1:-1;;11303:16:2;:37;11299:243;;11384:6;11364:16;:26;;11356:68;;;;-1:-1:-1;;;11356:68:2;;4436:2:40;11356:68:2;;;4418:21:40;4475:2;4455:18;;;4448:30;4514:31;4494:18;;;4487:59;4563:18;;11356:68:2;4234:353:40;11356:68:2;11466:51;11475:5;11482:7;11510:6;11491:16;:25;11466:8;:51::i;:::-;11227:321;11107:441;;;:::o;7821:651::-;-1:-1:-1;;;;;7947:18:2;;7939:68;;;;-1:-1:-1;;;7939:68:2;;4794:2:40;7939:68:2;;;4776:21:40;4833:2;4813:18;;;4806:30;4872:34;4852:18;;;4845:62;-1:-1:-1;;;4923:18:40;;;4916:35;4968:19;;7939:68:2;4592:401:40;7939:68:2;-1:-1:-1;;;;;8025:16:2;;8017:64;;;;-1:-1:-1;;;8017:64:2;;5200:2:40;8017:64:2;;;5182:21:40;5239:2;5219:18;;;5212:30;5278:34;5258:18;;;5251:62;-1:-1:-1;;;5329:18:40;;;5322:33;5372:19;;8017:64:2;4998:399:40;8017:64:2;-1:-1:-1;;;;;8163:15:2;;8141:19;8163:15;;;:9;:15;;;;;;8196:21;;;;8188:72;;;;-1:-1:-1;;;8188:72:2;;5604:2:40;8188:72:2;;;5586:21:40;5643:2;5623:18;;;5616:30;5682:34;5662:18;;;5655:62;-1:-1:-1;;;5733:18:40;;;5726:36;5779:19;;8188:72:2;5402:402:40;8188:72:2;-1:-1:-1;;;;;8294:15:2;;;;;;;:9;:15;;;;;;8312:20;;;8294:38;;8352:13;;;;;;;;:23;;8326:6;;8294:15;8352:23;;8326:6;;8352:23;:::i;:::-;;;;;;;;8406:2;-1:-1:-1;;;;;8391:26:2;8400:4;-1:-1:-1;;;;;8391:26:2;;8410:6;8391:26;;;;1391:25:40;;1379:2;1364:18;;1245:177;8391:26:2;;;;;;;;8428:37;12132:121;14:597:40;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:40;574:15;-1:-1:-1;;570:29:40;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:40:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:40;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:40:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:40:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;2790:225::-;2830:3;2861:1;2857:6;2854:1;2851:13;2848:136;;;2906:10;2901:3;2897:20;2894:1;2887:31;2941:4;2938:1;2931:15;2969:4;2966:1;2959:15;2848:136;-1:-1:-1;3000:9:40;;2790:225::o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "stateVariables": {
      "__gap": {
        "details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
      }
    },
    "version": 1
  },
  "offset": [
    1482,
    13254
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x75F JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7BD JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x82A JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x82A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6F1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6D5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x751 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77D DUP5 PUSH2 0x719 JUMP JUMPDEST SWAP3 POP PUSH2 0x78B PUSH1 0x20 DUP6 ADD PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP3 PUSH2 0x719 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D9 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E7 PUSH1 0x20 DUP5 ADD PUSH2 0x719 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x804 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x824 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE 0xF6 EXTCODEHASH 0xCE PUSH17 0x69BDFDE6069938807BCDA000DE64BAAE4 0xED PUSH27 0x758E6EA7D6B29FA064736F6C634300080D00330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        1482,
        13254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "6": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "DUP1",
      "path": "2"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "REVERT",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "17": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "POP",
      "path": "2"
    },
    "18": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "21": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "LT",
      "path": "2"
    },
    "22": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA9"
    },
    "25": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "29": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "SHR",
      "path": "2"
    },
    "32": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "DUP1",
      "path": "2"
    },
    "33": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x39509351"
    },
    "38": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "GT",
      "path": "2"
    },
    "39": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "43": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "DUP1",
      "path": "2"
    },
    "44": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x39509351"
    },
    "49": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "EQ",
      "path": "2"
    },
    "50": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x123"
    },
    "53": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "54": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "DUP1",
      "path": "2"
    },
    "55": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x70A08231"
    },
    "60": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "EQ",
      "path": "2"
    },
    "61": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x136"
    },
    "64": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "65": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "DUP1",
      "path": "2"
    },
    "66": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x95D89B41"
    },
    "71": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "EQ",
      "path": "2"
    },
    "72": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15F"
    },
    "75": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "76": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "DUP1",
      "path": "2"
    },
    "77": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA457C2D7"
    },
    "82": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "EQ",
      "path": "2"
    },
    "83": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x167"
    },
    "86": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "87": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "DUP1",
      "path": "2"
    },
    "88": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA9059CBB"
    },
    "93": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "EQ",
      "path": "2"
    },
    "94": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17A"
    },
    "97": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "98": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "DUP1",
      "path": "2"
    },
    "99": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xDD62ED3E"
    },
    "104": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "EQ",
      "path": "2"
    },
    "105": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18D"
    },
    "108": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "109": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "DUP1",
      "path": "2"
    },
    "112": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "REVERT",
      "path": "2"
    },
    "113": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "114": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "DUP1",
      "path": "2"
    },
    "115": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6FDDE03"
    },
    "120": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "EQ",
      "path": "2"
    },
    "121": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAE"
    },
    "124": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "125": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "DUP1",
      "path": "2"
    },
    "126": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x95EA7B3"
    },
    "131": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "EQ",
      "path": "2"
    },
    "132": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC"
    },
    "135": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "136": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "DUP1",
      "path": "2"
    },
    "137": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x18160DDD"
    },
    "142": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "EQ",
      "path": "2"
    },
    "143": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEF"
    },
    "146": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "147": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "DUP1",
      "path": "2"
    },
    "148": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x23B872DD"
    },
    "153": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "EQ",
      "path": "2"
    },
    "154": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x101"
    },
    "157": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "158": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "DUP1",
      "path": "2"
    },
    "159": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x313CE567"
    },
    "164": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "EQ",
      "path": "2"
    },
    "165": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x114"
    },
    "168": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "169": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "170": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "172": {
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "DUP1",
      "path": "2"
    },
    "173": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1482,
        13254
      ],
      "op": "REVERT",
      "path": "2"
    },
    "174": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "175": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB6"
    },
    "178": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A0"
    },
    "181": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMP",
      "path": "2"
    },
    "182": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "183": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "185": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "186": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC3"
    },
    "189": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "190": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "191": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6C4"
    },
    "194": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMP",
      "path": "2"
    },
    "195": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "196": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "198": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "199": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "DUP1",
      "path": "2"
    },
    "200": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "201": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SUB",
      "path": "2"
    },
    "202": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "203": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "RETURN",
      "path": "2"
    },
    "204": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "205": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDF"
    },
    "208": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDA"
    },
    "211": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "212": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "214": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x735"
    },
    "217": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMP",
      "path": "2"
    },
    "218": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "219": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x232"
    },
    "222": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMP",
      "path": "2"
    },
    "223": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "224": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "226": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "227": {
      "op": "SWAP1"
    },
    "228": {
      "op": "ISZERO"
    },
    "229": {
      "op": "ISZERO"
    },
    "230": {
      "op": "DUP2"
    },
    "231": {
      "op": "MSTORE"
    },
    "232": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "234": {
      "op": "ADD"
    },
    "235": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC3"
    },
    "238": {
      "op": "JUMP"
    },
    "239": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "240": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 0,
      "value": "0x35"
    },
    "242": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "243": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "244": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "246": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "247": {
      "op": "SWAP1"
    },
    "248": {
      "op": "DUP2"
    },
    "249": {
      "op": "MSTORE"
    },
    "250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "252": {
      "op": "ADD"
    },
    "253": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC3"
    },
    "256": {
      "op": "JUMP"
    },
    "257": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "258": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDF"
    },
    "261": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10F"
    },
    "264": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "265": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "267": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x75F"
    },
    "270": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMP",
      "path": "2"
    },
    "271": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "272": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24A"
    },
    "275": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMP",
      "path": "2"
    },
    "276": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "277": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "279": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "280": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3512,
        3514
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 1,
      "value": "0x12"
    },
    "282": {
      "op": "DUP2"
    },
    "283": {
      "op": "MSTORE"
    },
    "284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "286": {
      "op": "ADD"
    },
    "287": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC3"
    },
    "290": {
      "op": "JUMP"
    },
    "291": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6444
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "292": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6444
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDF"
    },
    "295": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6444
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x131"
    },
    "298": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6444
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "299": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6444
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "301": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6444
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x735"
    },
    "304": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6210,
        6444
      ],
      "op": "JUMP",
      "path": "2"
    },
    "305": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6444
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "306": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6444
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26E"
    },
    "309": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6210,
        6444
      ],
      "op": "JUMP",
      "path": "2"
    },
    "310": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "311": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF3"
    },
    "314": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x144"
    },
    "317": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "318": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "320": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x79B"
    },
    "323": {
      "fn": "ERC20Upgradeable.balanceOf",
      "jump": "i",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMP",
      "path": "2"
    },
    "324": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "329": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "331": {
      "op": "SHL"
    },
    "332": {
      "op": "SUB"
    },
    "333": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "AND",
      "path": "2",
      "statement": 2
    },
    "334": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3819,
        3826
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "336": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "337": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "DUP2",
      "path": "2"
    },
    "338": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "339": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3854
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "341": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "343": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "344": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "346": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "347": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "348": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "349": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "350": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMP",
      "path": "2"
    },
    "351": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "352": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB6"
    },
    "355": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x290"
    },
    "358": {
      "fn": "ERC20Upgradeable.symbol",
      "jump": "i",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMP",
      "path": "2"
    },
    "359": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6931,
        7358
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "360": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6931,
        7358
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDF"
    },
    "363": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6931,
        7358
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x175"
    },
    "366": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6931,
        7358
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "367": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6931,
        7358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "369": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6931,
        7358
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x735"
    },
    "372": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        6931,
        7358
      ],
      "op": "JUMP",
      "path": "2"
    },
    "373": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6931,
        7358
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "374": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6931,
        7358
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29F"
    },
    "377": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        6931,
        7358
      ],
      "op": "JUMP",
      "path": "2"
    },
    "378": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "379": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDF"
    },
    "382": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x188"
    },
    "385": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "386": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "388": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x735"
    },
    "391": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMP",
      "path": "2"
    },
    "392": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "393": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31F"
    },
    "396": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMP",
      "path": "2"
    },
    "397": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "398": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF3"
    },
    "401": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19B"
    },
    "404": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "405": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "407": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7BD"
    },
    "410": {
      "fn": "ERC20Upgradeable.allowance",
      "jump": "i",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMP",
      "path": "2"
    },
    "411": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "412": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32D"
    },
    "415": {
      "fn": "ERC20Upgradeable.allowance",
      "jump": "i",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMP",
      "path": "2"
    },
    "416": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "417": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2547,
        2560
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "419": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2579,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 3,
      "value": "0x36"
    },
    "421": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "422": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "423": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AF"
    },
    "426": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "427": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7F0"
    },
    "430": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMP",
      "path": "2"
    },
    "431": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "432": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "433": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "435": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "436": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "438": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "439": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "440": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DIV",
      "path": "2"
    },
    "441": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MUL",
      "path": "2"
    },
    "442": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "444": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "445": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "447": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "448": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "449": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "450": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "451": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "453": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "454": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "455": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "456": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "457": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "458": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "459": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "460": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "461": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "463": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "464": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "2"
    },
    "465": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "466": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "467": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DB"
    },
    "470": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "471": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7F0"
    },
    "474": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMP",
      "path": "2"
    },
    "475": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "476": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "477": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "478": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x228"
    },
    "481": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "482": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "483": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "485": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "LT",
      "path": "2"
    },
    "486": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FD"
    },
    "489": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "490": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "493": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "494": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP4",
      "path": "2"
    },
    "495": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "496": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DIV",
      "path": "2"
    },
    "497": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MUL",
      "path": "2"
    },
    "498": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP4",
      "path": "2"
    },
    "499": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "500": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "501": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "503": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "504": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "505": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x228"
    },
    "508": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMP",
      "path": "2"
    },
    "509": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "510": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "2"
    },
    "511": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "512": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "513": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "514": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "516": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "517": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "519": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "521": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "522": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "523": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "524": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "525": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "526": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "2"
    },
    "527": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "528": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "529": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "531": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "532": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "533": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "535": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "536": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "2"
    },
    "537": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP4",
      "path": "2"
    },
    "538": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "GT",
      "path": "2"
    },
    "539": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20B"
    },
    "542": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "543": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "2"
    },
    "544": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "545": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SUB",
      "path": "2"
    },
    "546": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "548": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "AND",
      "path": "2"
    },
    "549": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "2"
    },
    "550": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "2"
    },
    "551": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "552": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "553": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "554": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "555": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "556": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "557": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "558": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "559": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "2"
    },
    "560": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "561": {
      "fn": "ERC20Upgradeable.name",
      "jump": "o",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMP",
      "path": "2"
    },
    "562": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "563": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4853,
        4857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "565": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 4
    },
    "566": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4907,
        4939
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 5,
      "value": "0x240"
    },
    "569": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP2",
      "path": "6"
    },
    "570": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4923,
        4930
      ],
      "op": "DUP6",
      "path": "2"
    },
    "571": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4932,
        4938
      ],
      "op": "DUP6",
      "path": "2"
    },
    "572": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4907,
        4915
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x358"
    },
    "575": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4907,
        4939
      ],
      "op": "JUMP",
      "path": "2"
    },
    "576": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4907,
        4939
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "577": {
      "op": "POP"
    },
    "578": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4956,
        4960
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 6,
      "value": "0x1"
    },
    "580": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4956,
        4960
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "581": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "582": {
      "op": "POP"
    },
    "583": {
      "op": "POP"
    },
    "584": {
      "op": "POP"
    },
    "585": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "o",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMP",
      "path": "2"
    },
    "586": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "587": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5656,
        5660
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "589": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "6"
    },
    "590": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5712,
        5750
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 7,
      "value": "0x258"
    },
    "593": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5728,
        5732
      ],
      "op": "DUP6",
      "path": "2"
    },
    "594": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP3",
      "path": "6"
    },
    "595": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5743,
        5749
      ],
      "op": "DUP6",
      "path": "2"
    },
    "596": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5712,
        5727
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x47C"
    },
    "599": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5712,
        5750
      ],
      "op": "JUMP",
      "path": "2"
    },
    "600": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5712,
        5750
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "601": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5760,
        5787
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 8,
      "value": "0x263"
    },
    "604": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5770,
        5774
      ],
      "op": "DUP6",
      "path": "2"
    },
    "605": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5776,
        5778
      ],
      "op": "DUP6",
      "path": "2"
    },
    "606": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5780,
        5786
      ],
      "op": "DUP6",
      "path": "2"
    },
    "607": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5760,
        5769
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4F6"
    },
    "610": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5760,
        5787
      ],
      "op": "JUMP",
      "path": "2"
    },
    "611": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5760,
        5787
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "612": {
      "op": "POP"
    },
    "613": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5804,
        5808
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 9,
      "value": "0x1"
    },
    "615": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5804,
        5808
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "616": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "617": {
      "op": "POP"
    },
    "618": {
      "op": "POP"
    },
    "619": {
      "op": "POP"
    },
    "620": {
      "op": "POP"
    },
    "621": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "o",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMP",
      "path": "2"
    },
    "622": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6444
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "623": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6298,
        6302
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "625": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "6"
    },
    "626": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6352,
        6416
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 10,
      "value": "0x240"
    },
    "629": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP2",
      "path": "6"
    },
    "630": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6368,
        6375
      ],
      "op": "DUP6",
      "path": "2"
    },
    "631": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6405,
        6415
      ],
      "op": "DUP6",
      "path": "2"
    },
    "632": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6402
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x281"
    },
    "635": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP4",
      "path": "6"
    },
    "636": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6368,
        6375
      ],
      "op": "DUP4",
      "path": "2"
    },
    "637": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6386
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32D"
    },
    "640": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6377,
        6402
      ],
      "op": "JUMP",
      "path": "2"
    },
    "641": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6402
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "642": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28B"
    },
    "645": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "646": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "647": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x82A"
    },
    "650": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6377,
        6415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "651": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "652": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6352,
        6360
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x358"
    },
    "655": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6352,
        6416
      ],
      "op": "JUMP",
      "path": "2"
    },
    "656": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "657": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2760,
        2773
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "659": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2792,
        2799
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 11,
      "value": "0x37"
    },
    "661": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "DUP1",
      "path": "2"
    },
    "662": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "663": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AF"
    },
    "666": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "667": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7F0"
    },
    "670": {
      "fn": "ERC20Upgradeable.symbol",
      "jump": "i",
      "offset": [
        2785,
        2799
      ],
      "op": "JUMP",
      "path": "2"
    },
    "671": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6931,
        7358
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "672": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7024,
        7028
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "674": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "6"
    },
    "675": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7024,
        7028
      ],
      "op": "DUP2",
      "path": "2"
    },
    "676": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7105,
        7130
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AD"
    },
    "679": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP3",
      "path": "6"
    },
    "680": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7122,
        7129
      ],
      "op": "DUP7",
      "path": "2"
    },
    "681": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7105,
        7114
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32D"
    },
    "684": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        7105,
        7130
      ],
      "op": "JUMP",
      "path": "2"
    },
    "685": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7105,
        7130
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "686": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7078,
        7130
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "687": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7078,
        7130
      ],
      "op": "POP",
      "path": "2"
    },
    "688": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7168,
        7183
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 12
    },
    "689": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7148,
        7164
      ],
      "op": "DUP2",
      "path": "2"
    },
    "690": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7148,
        7183
      ],
      "op": "LT",
      "path": "2"
    },
    "691": {
      "branch": 29,
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7148,
        7183
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "692": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7140,
        7225
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x312"
    },
    "695": {
      "branch": 29,
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7140,
        7225
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "696": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7140,
        7225
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "698": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7140,
        7225
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "699": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "703": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "705": {
      "op": "SHL"
    },
    "706": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7140,
        7225
      ],
      "op": "DUP2",
      "path": "2"
    },
    "707": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7140,
        7225
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "708": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "710": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7140,
        7225
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "712": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7140,
        7225
      ],
      "op": "DUP3",
      "path": "2"
    },
    "713": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7140,
        7225
      ],
      "op": "ADD",
      "path": "2"
    },
    "714": {
      "op": "MSTORE"
    },
    "715": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "717": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "719": {
      "op": "DUP3"
    },
    "720": {
      "op": "ADD"
    },
    "721": {
      "op": "MSTORE"
    },
    "722": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "755": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "757": {
      "op": "DUP3"
    },
    "758": {
      "op": "ADD"
    },
    "759": {
      "op": "MSTORE"
    },
    "760": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "766": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "768": {
      "op": "SHL"
    },
    "769": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "771": {
      "op": "DUP3"
    },
    "772": {
      "op": "ADD"
    },
    "773": {
      "op": "MSTORE"
    },
    "774": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "776": {
      "op": "ADD"
    },
    "777": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7140,
        7225
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "778": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7140,
        7225
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "780": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7140,
        7225
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "781": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7140,
        7225
      ],
      "op": "DUP1",
      "path": "2"
    },
    "782": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7140,
        7225
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "783": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7140,
        7225
      ],
      "op": "SUB",
      "path": "2"
    },
    "784": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7140,
        7225
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "785": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7140,
        7225
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "786": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7140,
        7225
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "787": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7259,
        7319
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 13,
      "value": "0x263"
    },
    "790": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7268,
        7273
      ],
      "op": "DUP3",
      "path": "2"
    },
    "791": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7275,
        7282
      ],
      "op": "DUP7",
      "path": "2"
    },
    "792": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7303,
        7318
      ],
      "op": "DUP7",
      "path": "2"
    },
    "793": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7284,
        7300
      ],
      "op": "DUP5",
      "path": "2"
    },
    "794": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7284,
        7318
      ],
      "op": "SUB",
      "path": "2"
    },
    "795": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7259,
        7267
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x358"
    },
    "798": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        7259,
        7319
      ],
      "op": "JUMP",
      "path": "2"
    },
    "799": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "800": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4145,
        4149
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "802": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "6"
    },
    "803": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4199,
        4227
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 14,
      "value": "0x240"
    },
    "806": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP2",
      "path": "6"
    },
    "807": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4216,
        4218
      ],
      "op": "DUP6",
      "path": "2"
    },
    "808": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4220,
        4226
      ],
      "op": "DUP6",
      "path": "2"
    },
    "809": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4199,
        4208
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4F6"
    },
    "812": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4199,
        4227
      ],
      "op": "JUMP",
      "path": "2"
    },
    "813": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "818": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "820": {
      "op": "SHL"
    },
    "821": {
      "op": "SUB"
    },
    "822": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 15
    },
    "823": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP3",
      "path": "2"
    },
    "824": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "AND",
      "path": "2"
    },
    "825": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4402,
        4409
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "827": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "828": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "829": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "830": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x34"
    },
    "832": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "834": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "835": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "2"
    },
    "836": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "837": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "839": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP1",
      "path": "2"
    },
    "840": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP4",
      "path": "2"
    },
    "841": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "842": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "843": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "844": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "845": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "AND",
      "path": "2"
    },
    "846": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "DUP3",
      "path": "2"
    },
    "847": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "848": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "849": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "850": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "851": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "852": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "853": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "854": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "855": {
      "fn": "ERC20Upgradeable.allowance",
      "jump": "o",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMP",
      "path": "2"
    },
    "856": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10456,
        10826
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "861": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "863": {
      "op": "SHL"
    },
    "864": {
      "op": "SUB"
    },
    "865": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10587,
        10606
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 16
    },
    "866": {
      "branch": 30,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10587,
        10606
      ],
      "op": "AND",
      "path": "2"
    },
    "867": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10579,
        10647
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3BA"
    },
    "870": {
      "branch": 30,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10579,
        10647
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "871": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10579,
        10647
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "873": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10579,
        10647
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "874": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "878": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "880": {
      "op": "SHL"
    },
    "881": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10579,
        10647
      ],
      "op": "DUP2",
      "path": "2"
    },
    "882": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10579,
        10647
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "885": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10579,
        10647
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "887": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10579,
        10647
      ],
      "op": "DUP3",
      "path": "2"
    },
    "888": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10579,
        10647
      ],
      "op": "ADD",
      "path": "2"
    },
    "889": {
      "op": "MSTORE"
    },
    "890": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "892": {
      "op": "DUP1"
    },
    "893": {
      "op": "DUP3"
    },
    "894": {
      "op": "ADD"
    },
    "895": {
      "op": "MSTORE"
    },
    "896": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "929": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "931": {
      "op": "DUP3"
    },
    "932": {
      "op": "ADD"
    },
    "933": {
      "op": "MSTORE"
    },
    "934": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "939": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "941": {
      "op": "SHL"
    },
    "942": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "944": {
      "op": "DUP3"
    },
    "945": {
      "op": "ADD"
    },
    "946": {
      "op": "MSTORE"
    },
    "947": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "949": {
      "op": "ADD"
    },
    "950": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10579,
        10647
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x309"
    },
    "953": {
      "op": "JUMP"
    },
    "954": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10579,
        10647
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "959": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "961": {
      "op": "SHL"
    },
    "962": {
      "op": "SUB"
    },
    "963": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10665,
        10686
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 17
    },
    "964": {
      "branch": 31,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10665,
        10686
      ],
      "op": "AND",
      "path": "2"
    },
    "965": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10657,
        10725
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x41B"
    },
    "968": {
      "branch": 31,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10657,
        10725
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "969": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10657,
        10725
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "971": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10657,
        10725
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "972": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "976": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "978": {
      "op": "SHL"
    },
    "979": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10657,
        10725
      ],
      "op": "DUP2",
      "path": "2"
    },
    "980": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10657,
        10725
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "981": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "983": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10657,
        10725
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "985": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10657,
        10725
      ],
      "op": "DUP3",
      "path": "2"
    },
    "986": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10657,
        10725
      ],
      "op": "ADD",
      "path": "2"
    },
    "987": {
      "op": "MSTORE"
    },
    "988": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "990": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "992": {
      "op": "DUP3"
    },
    "993": {
      "op": "ADD"
    },
    "994": {
      "op": "MSTORE"
    },
    "995": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "1028": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1030": {
      "op": "DUP3"
    },
    "1031": {
      "op": "ADD"
    },
    "1032": {
      "op": "MSTORE"
    },
    "1033": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1038": {
      "op": "SHL"
    },
    "1039": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1041": {
      "op": "DUP3"
    },
    "1042": {
      "op": "ADD"
    },
    "1043": {
      "op": "MSTORE"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1046": {
      "op": "ADD"
    },
    "1047": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10657,
        10725
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x309"
    },
    "1050": {
      "op": "JUMP"
    },
    "1051": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10657,
        10725
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1056": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1058": {
      "op": "SHL"
    },
    "1059": {
      "op": "SUB"
    },
    "1060": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10754
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 18
    },
    "1061": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10754
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1062": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10754
      ],
      "op": "AND",
      "path": "2"
    },
    "1063": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10754
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1065": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10754
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1066": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10754
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1067": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10754
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1068": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x34"
    },
    "1070": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10754
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1072": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10754
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1073": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10754
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1074": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10754
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1075": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10754
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1077": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10754
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1078": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10754
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1079": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10754
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1080": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10763
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1081": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10763
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1082": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10763
      ],
      "op": "AND",
      "path": "2"
    },
    "1083": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10763
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1084": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10763
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1085": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10763
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1086": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10763
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1087": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10763
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1088": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10763
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1089": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10763
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1090": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10763
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1091": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10763
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1092": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10763
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1093": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10772
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1094": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10772
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1095": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10772
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1096": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10787,
        10819
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 19
    },
    "1097": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10787,
        10819
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1098": {
      "op": "DUP5"
    },
    "1099": {
      "op": "DUP2"
    },
    "1100": {
      "op": "MSTORE"
    },
    "1101": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10787,
        10819
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1134": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10787,
        10819
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1135": {
      "op": "ADD"
    },
    "1136": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10787,
        10819
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1138": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10787,
        10819
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1139": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10787,
        10819
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1140": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10787,
        10819
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1141": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10787,
        10819
      ],
      "op": "SUB",
      "path": "2"
    },
    "1142": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10787,
        10819
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1143": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10787,
        10819
      ],
      "op": "LOG3",
      "path": "2"
    },
    "1144": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10456,
        10826
      ],
      "op": "POP",
      "path": "2"
    },
    "1145": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10456,
        10826
      ],
      "op": "POP",
      "path": "2"
    },
    "1146": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10456,
        10826
      ],
      "op": "POP",
      "path": "2"
    },
    "1147": {
      "fn": "ERC20Upgradeable._approve",
      "jump": "o",
      "offset": [
        10456,
        10826
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1148": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11107,
        11548
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1149": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11237,
        11261
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1151": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11264,
        11289
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x488"
    },
    "1154": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11274,
        11279
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1155": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11281,
        11288
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1156": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11264,
        11273
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32D"
    },
    "1159": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "jump": "i",
      "offset": [
        11264,
        11289
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1160": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11264,
        11289
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1161": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11237,
        11289
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1162": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11237,
        11289
      ],
      "op": "POP",
      "path": "2"
    },
    "1163": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1165": {
      "op": "NOT"
    },
    "1166": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11303,
        11319
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1167": {
      "branch": 32,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11303,
        11340
      ],
      "op": "EQ",
      "path": "2"
    },
    "1168": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11299,
        11542
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4F0"
    },
    "1171": {
      "branch": 32,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11299,
        11542
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1172": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11384,
        11390
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 20
    },
    "1173": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11364,
        11380
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1174": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11364,
        11390
      ],
      "op": "LT",
      "path": "2"
    },
    "1175": {
      "branch": 33,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11364,
        11390
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1176": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4E3"
    },
    "1179": {
      "branch": 33,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1180": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1182": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1183": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1187": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1189": {
      "op": "SHL"
    },
    "1190": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1191": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1194": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1196": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1197": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "ADD",
      "path": "2"
    },
    "1198": {
      "op": "MSTORE"
    },
    "1199": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "1201": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1203": {
      "op": "DUP3"
    },
    "1204": {
      "op": "ADD"
    },
    "1205": {
      "op": "MSTORE"
    },
    "1206": {
      "op": "PUSH32",
      "value": "0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1241": {
      "op": "DUP3"
    },
    "1242": {
      "op": "ADD"
    },
    "1243": {
      "op": "MSTORE"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1246": {
      "op": "ADD"
    },
    "1247": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x309"
    },
    "1250": {
      "op": "JUMP"
    },
    "1251": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1252": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11466,
        11517
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 21,
      "value": "0x4F0"
    },
    "1255": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11475,
        11480
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1256": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11482,
        11489
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1257": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11510,
        11516
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1258": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11491,
        11507
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1259": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11491,
        11516
      ],
      "op": "SUB",
      "path": "2"
    },
    "1260": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11466,
        11474
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x358"
    },
    "1263": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "jump": "i",
      "offset": [
        11466,
        11517
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1264": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11466,
        11517
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1265": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11227,
        11548
      ],
      "op": "POP",
      "path": "2"
    },
    "1266": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11107,
        11548
      ],
      "op": "POP",
      "path": "2"
    },
    "1267": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11107,
        11548
      ],
      "op": "POP",
      "path": "2"
    },
    "1268": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11107,
        11548
      ],
      "op": "POP",
      "path": "2"
    },
    "1269": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "jump": "o",
      "offset": [
        11107,
        11548
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1270": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7821,
        8472
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1275": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1277": {
      "op": "SHL"
    },
    "1278": {
      "op": "SUB"
    },
    "1279": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7947,
        7965
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 22
    },
    "1280": {
      "branch": 34,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7947,
        7965
      ],
      "op": "AND",
      "path": "2"
    },
    "1281": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7939,
        8007
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x55A"
    },
    "1284": {
      "branch": 34,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7939,
        8007
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1285": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7939,
        8007
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1287": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7939,
        8007
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1288": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1292": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1294": {
      "op": "SHL"
    },
    "1295": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7939,
        8007
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1296": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7939,
        8007
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1297": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1299": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7939,
        8007
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1301": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7939,
        8007
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1302": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7939,
        8007
      ],
      "op": "ADD",
      "path": "2"
    },
    "1303": {
      "op": "MSTORE"
    },
    "1304": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "1306": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1308": {
      "op": "DUP3"
    },
    "1309": {
      "op": "ADD"
    },
    "1310": {
      "op": "MSTORE"
    },
    "1311": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "1344": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1346": {
      "op": "DUP3"
    },
    "1347": {
      "op": "ADD"
    },
    "1348": {
      "op": "MSTORE"
    },
    "1349": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "1355": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1357": {
      "op": "SHL"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1360": {
      "op": "DUP3"
    },
    "1361": {
      "op": "ADD"
    },
    "1362": {
      "op": "MSTORE"
    },
    "1363": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1365": {
      "op": "ADD"
    },
    "1366": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7939,
        8007
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x309"
    },
    "1369": {
      "op": "JUMP"
    },
    "1370": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7939,
        8007
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1375": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1377": {
      "op": "SHL"
    },
    "1378": {
      "op": "SUB"
    },
    "1379": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8025,
        8041
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 23
    },
    "1380": {
      "branch": 35,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8025,
        8041
      ],
      "op": "AND",
      "path": "2"
    },
    "1381": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8017,
        8081
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5BC"
    },
    "1384": {
      "branch": 35,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8017,
        8081
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1385": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8017,
        8081
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1387": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8017,
        8081
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1388": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1394": {
      "op": "SHL"
    },
    "1395": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8017,
        8081
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1396": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8017,
        8081
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1397": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1399": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8017,
        8081
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1401": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8017,
        8081
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1402": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8017,
        8081
      ],
      "op": "ADD",
      "path": "2"
    },
    "1403": {
      "op": "MSTORE"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "1406": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1408": {
      "op": "DUP3"
    },
    "1409": {
      "op": "ADD"
    },
    "1410": {
      "op": "MSTORE"
    },
    "1411": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1446": {
      "op": "DUP3"
    },
    "1447": {
      "op": "ADD"
    },
    "1448": {
      "op": "MSTORE"
    },
    "1449": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "1455": {
      "op": "SHL"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1458": {
      "op": "DUP3"
    },
    "1459": {
      "op": "ADD"
    },
    "1460": {
      "op": "MSTORE"
    },
    "1461": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1463": {
      "op": "ADD"
    },
    "1464": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8017,
        8081
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x309"
    },
    "1467": {
      "op": "JUMP"
    },
    "1468": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8017,
        8081
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1475": {
      "op": "SHL"
    },
    "1476": {
      "op": "SUB"
    },
    "1477": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8163,
        8178
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1478": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8163,
        8178
      ],
      "op": "AND",
      "path": "2"
    },
    "1479": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8141,
        8160
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1481": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8163,
        8178
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1482": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8163,
        8178
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1483": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8163,
        8178
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1484": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8163,
        8172
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "1486": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8163,
        8178
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1488": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8163,
        8178
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1489": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8163,
        8178
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1491": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8163,
        8178
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1492": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8163,
        8178
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1493": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8163,
        8178
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1494": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8217
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 24
    },
    "1495": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8217
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1496": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8217
      ],
      "op": "LT",
      "path": "2"
    },
    "1497": {
      "branch": 36,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8217
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1498": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8188,
        8260
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x634"
    },
    "1501": {
      "branch": 36,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8188,
        8260
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1502": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8188,
        8260
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1504": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8188,
        8260
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1505": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1509": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1511": {
      "op": "SHL"
    },
    "1512": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8188,
        8260
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1513": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8188,
        8260
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1514": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1516": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8188,
        8260
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1518": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8188,
        8260
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1519": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8188,
        8260
      ],
      "op": "ADD",
      "path": "2"
    },
    "1520": {
      "op": "MSTORE"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1525": {
      "op": "DUP3"
    },
    "1526": {
      "op": "ADD"
    },
    "1527": {
      "op": "MSTORE"
    },
    "1528": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1563": {
      "op": "DUP3"
    },
    "1564": {
      "op": "ADD"
    },
    "1565": {
      "op": "MSTORE"
    },
    "1566": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1575": {
      "op": "SHL"
    },
    "1576": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1578": {
      "op": "DUP3"
    },
    "1579": {
      "op": "ADD"
    },
    "1580": {
      "op": "MSTORE"
    },
    "1581": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1583": {
      "op": "ADD"
    },
    "1584": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8188,
        8260
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x309"
    },
    "1587": {
      "op": "JUMP"
    },
    "1588": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8188,
        8260
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1593": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1595": {
      "op": "SHL"
    },
    "1596": {
      "op": "SUB"
    },
    "1597": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8294,
        8309
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 25
    },
    "1598": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8294,
        8309
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1599": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8294,
        8309
      ],
      "op": "AND",
      "path": "2"
    },
    "1600": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8294,
        8309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1602": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8294,
        8309
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1603": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8294,
        8309
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1604": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8294,
        8309
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1605": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8294,
        8303
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x33"
    },
    "1607": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8294,
        8309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1609": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8294,
        8309
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1610": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8294,
        8309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1612": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8294,
        8309
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1613": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8294,
        8309
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1614": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8294,
        8309
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1615": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8312,
        8332
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1616": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8312,
        8332
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1617": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8312,
        8332
      ],
      "op": "SUB",
      "path": "2"
    },
    "1618": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8294,
        8332
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1619": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8294,
        8332
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1620": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8365
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 26
    },
    "1621": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8365
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1622": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8365
      ],
      "op": "AND",
      "path": "2"
    },
    "1623": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8365
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1624": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8365
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1625": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8365
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1626": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8365
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1627": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8365
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1628": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8375
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1629": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8375
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1630": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8326,
        8332
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1631": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8326,
        8332
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1632": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8294,
        8309
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1633": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8375
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x66B"
    },
    "1636": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8375
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1637": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8326,
        8332
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1638": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8326,
        8332
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1639": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8375
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x82A"
    },
    "1642": {
      "fn": "ERC20Upgradeable._transfer",
      "jump": "i",
      "offset": [
        8352,
        8375
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1643": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8375
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1644": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8375
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1645": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8375
      ],
      "op": "POP",
      "path": "2"
    },
    "1646": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8375
      ],
      "op": "POP",
      "path": "2"
    },
    "1647": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8375
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1648": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8375
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1649": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8375
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1650": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8375
      ],
      "op": "POP",
      "path": "2"
    },
    "1651": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8406,
        8408
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 27
    },
    "1652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1656": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1658": {
      "op": "SHL"
    },
    "1659": {
      "op": "SUB"
    },
    "1660": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8391,
        8417
      ],
      "op": "AND",
      "path": "2"
    },
    "1661": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8400,
        8404
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1666": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1668": {
      "op": "SHL"
    },
    "1669": {
      "op": "SUB"
    },
    "1670": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8391,
        8417
      ],
      "op": "AND",
      "path": "2"
    },
    "1671": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8391,
        8417
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1704": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8410,
        8416
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1705": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8391,
        8417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1707": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8391,
        8417
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1708": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8391,
        8417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6B7"
    },
    "1711": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8391,
        8417
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1712": {
      "op": "DUP2"
    },
    "1713": {
      "op": "MSTORE"
    },
    "1714": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1716": {
      "op": "ADD"
    },
    "1717": {
      "op": "SWAP1"
    },
    "1718": {
      "op": "JUMP"
    },
    "1719": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8391,
        8417
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1720": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8391,
        8417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1722": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8391,
        8417
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1723": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8391,
        8417
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1724": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8391,
        8417
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1725": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8391,
        8417
      ],
      "op": "SUB",
      "path": "2"
    },
    "1726": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8391,
        8417
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1727": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8391,
        8417
      ],
      "op": "LOG3",
      "path": "2"
    },
    "1728": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8428,
        8465
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 28,
      "value": "0x4F0"
    },
    "1731": {
      "fn": "ERC20Upgradeable._beforeTokenTransfer",
      "offset": [
        12132,
        12253
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1732": {
      "op": "JUMPDEST"
    },
    "1733": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1737": {
      "op": "DUP1"
    },
    "1738": {
      "op": "DUP4"
    },
    "1739": {
      "op": "MSTORE"
    },
    "1740": {
      "op": "DUP4"
    },
    "1741": {
      "op": "MLOAD"
    },
    "1742": {
      "op": "DUP1"
    },
    "1743": {
      "op": "DUP3"
    },
    "1744": {
      "op": "DUP6"
    },
    "1745": {
      "op": "ADD"
    },
    "1746": {
      "op": "MSTORE"
    },
    "1747": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1749": {
      "op": "JUMPDEST"
    },
    "1750": {
      "op": "DUP2"
    },
    "1751": {
      "op": "DUP2"
    },
    "1752": {
      "op": "LT"
    },
    "1753": {
      "op": "ISZERO"
    },
    "1754": {
      "op": "PUSH2",
      "value": "0x6F1"
    },
    "1757": {
      "op": "JUMPI"
    },
    "1758": {
      "op": "DUP6"
    },
    "1759": {
      "op": "DUP2"
    },
    "1760": {
      "op": "ADD"
    },
    "1761": {
      "op": "DUP4"
    },
    "1762": {
      "op": "ADD"
    },
    "1763": {
      "op": "MLOAD"
    },
    "1764": {
      "op": "DUP6"
    },
    "1765": {
      "op": "DUP3"
    },
    "1766": {
      "op": "ADD"
    },
    "1767": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1769": {
      "op": "ADD"
    },
    "1770": {
      "op": "MSTORE"
    },
    "1771": {
      "op": "DUP3"
    },
    "1772": {
      "op": "ADD"
    },
    "1773": {
      "op": "PUSH2",
      "value": "0x6D5"
    },
    "1776": {
      "op": "JUMP"
    },
    "1777": {
      "op": "JUMPDEST"
    },
    "1778": {
      "op": "DUP2"
    },
    "1779": {
      "op": "DUP2"
    },
    "1780": {
      "op": "GT"
    },
    "1781": {
      "op": "ISZERO"
    },
    "1782": {
      "op": "PUSH2",
      "value": "0x703"
    },
    "1785": {
      "op": "JUMPI"
    },
    "1786": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1790": {
      "op": "DUP4"
    },
    "1791": {
      "op": "DUP8"
    },
    "1792": {
      "op": "ADD"
    },
    "1793": {
      "op": "ADD"
    },
    "1794": {
      "op": "MSTORE"
    },
    "1795": {
      "op": "JUMPDEST"
    },
    "1796": {
      "op": "POP"
    },
    "1797": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1799": {
      "op": "ADD"
    },
    "1800": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1802": {
      "op": "NOT"
    },
    "1803": {
      "op": "AND"
    },
    "1804": {
      "op": "SWAP3"
    },
    "1805": {
      "op": "SWAP1"
    },
    "1806": {
      "op": "SWAP3"
    },
    "1807": {
      "op": "ADD"
    },
    "1808": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1810": {
      "op": "ADD"
    },
    "1811": {
      "op": "SWAP4"
    },
    "1812": {
      "op": "SWAP3"
    },
    "1813": {
      "op": "POP"
    },
    "1814": {
      "op": "POP"
    },
    "1815": {
      "op": "POP"
    },
    "1816": {
      "jump": "o",
      "op": "JUMP"
    },
    "1817": {
      "op": "JUMPDEST"
    },
    "1818": {
      "op": "DUP1"
    },
    "1819": {
      "op": "CALLDATALOAD"
    },
    "1820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1824": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1826": {
      "op": "SHL"
    },
    "1827": {
      "op": "SUB"
    },
    "1828": {
      "op": "DUP2"
    },
    "1829": {
      "op": "AND"
    },
    "1830": {
      "op": "DUP2"
    },
    "1831": {
      "op": "EQ"
    },
    "1832": {
      "op": "PUSH2",
      "value": "0x730"
    },
    "1835": {
      "op": "JUMPI"
    },
    "1836": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1838": {
      "op": "DUP1"
    },
    "1839": {
      "op": "REVERT"
    },
    "1840": {
      "op": "JUMPDEST"
    },
    "1841": {
      "op": "SWAP2"
    },
    "1842": {
      "op": "SWAP1"
    },
    "1843": {
      "op": "POP"
    },
    "1844": {
      "jump": "o",
      "op": "JUMP"
    },
    "1845": {
      "op": "JUMPDEST"
    },
    "1846": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1848": {
      "op": "DUP1"
    },
    "1849": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1851": {
      "op": "DUP4"
    },
    "1852": {
      "op": "DUP6"
    },
    "1853": {
      "op": "SUB"
    },
    "1854": {
      "op": "SLT"
    },
    "1855": {
      "op": "ISZERO"
    },
    "1856": {
      "op": "PUSH2",
      "value": "0x748"
    },
    "1859": {
      "op": "JUMPI"
    },
    "1860": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1862": {
      "op": "DUP1"
    },
    "1863": {
      "op": "REVERT"
    },
    "1864": {
      "op": "JUMPDEST"
    },
    "1865": {
      "op": "PUSH2",
      "value": "0x751"
    },
    "1868": {
      "op": "DUP4"
    },
    "1869": {
      "op": "PUSH2",
      "value": "0x719"
    },
    "1872": {
      "jump": "i",
      "op": "JUMP"
    },
    "1873": {
      "op": "JUMPDEST"
    },
    "1874": {
      "op": "SWAP5"
    },
    "1875": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1877": {
      "op": "SWAP4"
    },
    "1878": {
      "op": "SWAP1"
    },
    "1879": {
      "op": "SWAP4"
    },
    "1880": {
      "op": "ADD"
    },
    "1881": {
      "op": "CALLDATALOAD"
    },
    "1882": {
      "op": "SWAP4"
    },
    "1883": {
      "op": "POP"
    },
    "1884": {
      "op": "POP"
    },
    "1885": {
      "op": "POP"
    },
    "1886": {
      "jump": "o",
      "op": "JUMP"
    },
    "1887": {
      "op": "JUMPDEST"
    },
    "1888": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1890": {
      "op": "DUP1"
    },
    "1891": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1893": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1895": {
      "op": "DUP5"
    },
    "1896": {
      "op": "DUP7"
    },
    "1897": {
      "op": "SUB"
    },
    "1898": {
      "op": "SLT"
    },
    "1899": {
      "op": "ISZERO"
    },
    "1900": {
      "op": "PUSH2",
      "value": "0x774"
    },
    "1903": {
      "op": "JUMPI"
    },
    "1904": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1906": {
      "op": "DUP1"
    },
    "1907": {
      "op": "REVERT"
    },
    "1908": {
      "op": "JUMPDEST"
    },
    "1909": {
      "op": "PUSH2",
      "value": "0x77D"
    },
    "1912": {
      "op": "DUP5"
    },
    "1913": {
      "op": "PUSH2",
      "value": "0x719"
    },
    "1916": {
      "jump": "i",
      "op": "JUMP"
    },
    "1917": {
      "op": "JUMPDEST"
    },
    "1918": {
      "op": "SWAP3"
    },
    "1919": {
      "op": "POP"
    },
    "1920": {
      "op": "PUSH2",
      "value": "0x78B"
    },
    "1923": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1925": {
      "op": "DUP6"
    },
    "1926": {
      "op": "ADD"
    },
    "1927": {
      "op": "PUSH2",
      "value": "0x719"
    },
    "1930": {
      "jump": "i",
      "op": "JUMP"
    },
    "1931": {
      "op": "JUMPDEST"
    },
    "1932": {
      "op": "SWAP2"
    },
    "1933": {
      "op": "POP"
    },
    "1934": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1936": {
      "op": "DUP5"
    },
    "1937": {
      "op": "ADD"
    },
    "1938": {
      "op": "CALLDATALOAD"
    },
    "1939": {
      "op": "SWAP1"
    },
    "1940": {
      "op": "POP"
    },
    "1941": {
      "op": "SWAP3"
    },
    "1942": {
      "op": "POP"
    },
    "1943": {
      "op": "SWAP3"
    },
    "1944": {
      "op": "POP"
    },
    "1945": {
      "op": "SWAP3"
    },
    "1946": {
      "jump": "o",
      "op": "JUMP"
    },
    "1947": {
      "op": "JUMPDEST"
    },
    "1948": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1950": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1952": {
      "op": "DUP3"
    },
    "1953": {
      "op": "DUP5"
    },
    "1954": {
      "op": "SUB"
    },
    "1955": {
      "op": "SLT"
    },
    "1956": {
      "op": "ISZERO"
    },
    "1957": {
      "op": "PUSH2",
      "value": "0x7AD"
    },
    "1960": {
      "op": "JUMPI"
    },
    "1961": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1963": {
      "op": "DUP1"
    },
    "1964": {
      "op": "REVERT"
    },
    "1965": {
      "op": "JUMPDEST"
    },
    "1966": {
      "op": "PUSH2",
      "value": "0x7B6"
    },
    "1969": {
      "op": "DUP3"
    },
    "1970": {
      "op": "PUSH2",
      "value": "0x719"
    },
    "1973": {
      "jump": "i",
      "op": "JUMP"
    },
    "1974": {
      "op": "JUMPDEST"
    },
    "1975": {
      "op": "SWAP4"
    },
    "1976": {
      "op": "SWAP3"
    },
    "1977": {
      "op": "POP"
    },
    "1978": {
      "op": "POP"
    },
    "1979": {
      "op": "POP"
    },
    "1980": {
      "jump": "o",
      "op": "JUMP"
    },
    "1981": {
      "op": "JUMPDEST"
    },
    "1982": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1984": {
      "op": "DUP1"
    },
    "1985": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1987": {
      "op": "DUP4"
    },
    "1988": {
      "op": "DUP6"
    },
    "1989": {
      "op": "SUB"
    },
    "1990": {
      "op": "SLT"
    },
    "1991": {
      "op": "ISZERO"
    },
    "1992": {
      "op": "PUSH2",
      "value": "0x7D0"
    },
    "1995": {
      "op": "JUMPI"
    },
    "1996": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1998": {
      "op": "DUP1"
    },
    "1999": {
      "op": "REVERT"
    },
    "2000": {
      "op": "JUMPDEST"
    },
    "2001": {
      "op": "PUSH2",
      "value": "0x7D9"
    },
    "2004": {
      "op": "DUP4"
    },
    "2005": {
      "op": "PUSH2",
      "value": "0x719"
    },
    "2008": {
      "jump": "i",
      "op": "JUMP"
    },
    "2009": {
      "op": "JUMPDEST"
    },
    "2010": {
      "op": "SWAP2"
    },
    "2011": {
      "op": "POP"
    },
    "2012": {
      "op": "PUSH2",
      "value": "0x7E7"
    },
    "2015": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2017": {
      "op": "DUP5"
    },
    "2018": {
      "op": "ADD"
    },
    "2019": {
      "op": "PUSH2",
      "value": "0x719"
    },
    "2022": {
      "jump": "i",
      "op": "JUMP"
    },
    "2023": {
      "op": "JUMPDEST"
    },
    "2024": {
      "op": "SWAP1"
    },
    "2025": {
      "op": "POP"
    },
    "2026": {
      "op": "SWAP3"
    },
    "2027": {
      "op": "POP"
    },
    "2028": {
      "op": "SWAP3"
    },
    "2029": {
      "op": "SWAP1"
    },
    "2030": {
      "op": "POP"
    },
    "2031": {
      "jump": "o",
      "op": "JUMP"
    },
    "2032": {
      "op": "JUMPDEST"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2035": {
      "op": "DUP2"
    },
    "2036": {
      "op": "DUP2"
    },
    "2037": {
      "op": "SHR"
    },
    "2038": {
      "op": "SWAP1"
    },
    "2039": {
      "op": "DUP3"
    },
    "2040": {
      "op": "AND"
    },
    "2041": {
      "op": "DUP1"
    },
    "2042": {
      "op": "PUSH2",
      "value": "0x804"
    },
    "2045": {
      "op": "JUMPI"
    },
    "2046": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "2048": {
      "op": "DUP3"
    },
    "2049": {
      "op": "AND"
    },
    "2050": {
      "op": "SWAP2"
    },
    "2051": {
      "op": "POP"
    },
    "2052": {
      "op": "JUMPDEST"
    },
    "2053": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2055": {
      "op": "DUP3"
    },
    "2056": {
      "op": "LT"
    },
    "2057": {
      "op": "DUP2"
    },
    "2058": {
      "op": "SUB"
    },
    "2059": {
      "op": "PUSH2",
      "value": "0x824"
    },
    "2062": {
      "op": "JUMPI"
    },
    "2063": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2068": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2070": {
      "op": "SHL"
    },
    "2071": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2073": {
      "op": "MSTORE"
    },
    "2074": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2076": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2078": {
      "op": "MSTORE"
    },
    "2079": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2081": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2083": {
      "op": "REVERT"
    },
    "2084": {
      "op": "JUMPDEST"
    },
    "2085": {
      "op": "POP"
    },
    "2086": {
      "op": "SWAP2"
    },
    "2087": {
      "op": "SWAP1"
    },
    "2088": {
      "op": "POP"
    },
    "2089": {
      "jump": "o",
      "op": "JUMP"
    },
    "2090": {
      "op": "JUMPDEST"
    },
    "2091": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2093": {
      "op": "DUP3"
    },
    "2094": {
      "op": "NOT"
    },
    "2095": {
      "op": "DUP3"
    },
    "2096": {
      "op": "GT"
    },
    "2097": {
      "op": "ISZERO"
    },
    "2098": {
      "op": "PUSH2",
      "value": "0x84B"
    },
    "2101": {
      "op": "JUMPI"
    },
    "2102": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2107": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2109": {
      "op": "SHL"
    },
    "2110": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2112": {
      "op": "MSTORE"
    },
    "2113": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2115": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2117": {
      "op": "MSTORE"
    },
    "2118": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2120": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2122": {
      "op": "REVERT"
    },
    "2123": {
      "op": "JUMPDEST"
    },
    "2124": {
      "op": "POP"
    },
    "2125": {
      "op": "ADD"
    },
    "2126": {
      "op": "SWAP1"
    },
    "2127": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "8d5a6a50483afa1d7c80ace4fce3d0a5a9f4818d",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20Upgradeable.sol\";\nimport \"./extensions/IERC20MetadataUpgradeable.sol\";\nimport \"../../utils/ContextUpgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[45] private __gap;\n}\n",
  "sourceMap": "1482:11772:2:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "C:/Users/savvy/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.6.0/contracts/token/ERC20/ERC20Upgradeable.sol",
  "type": "contract"
}